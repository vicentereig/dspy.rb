---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"developer","content":"      Your
        input schema fields are:\n        ```json\n         {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"question\":{\"type\":\"string\",\"description\":\"The
        question to answer\"},\"history\":{\"type\":\"string\",\"description\":\"Previous
        thoughts and actions\"},\"available_tools\":{\"type\":\"string\",\"description\":\"List
        of available tools and their descriptions\"}},\"required\":[\"question\",\"history\",\"available_tools\"]}\n        ```\n      Your
        output schema fields are:\n        ```json\n          {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"thought\":{\"type\":\"string\"},\"action\":{\"type\":\"string\"},\"action_input\":{\"type\":\"string\"},\"reasoning\":{\"type\":\"string\"}},\"required\":[\"thought\",\"action\",\"action_input\",\"reasoning\"]}\n        ````\n      All
        interactions will be structured in the following way, with the appropriate
        values filled in.\n\n      ## Input values\n        ```json\n          {input_values}\n        ```  \n      ##
        Output values\n      Respond exclusively with the output schema fields in
        the json block below.\n        ```json\n          {output_values}\n        ```\n      \n      In
        adhering to this structure, your objective is: Generate a thought about what
        to do next to answer the question.\n\n"},{"role":"user","content":"        ##
        Input Values\n        ```json\n        {\"question\":\"What is 42 plus 58?\",\"history\":\"\",\"available_tools\":\"-
        get_todays_date: Get today''s date\\n- add_numbers: Add two numbers together\"}\n        ```     \n        \n        Respond
        with the corresponding output schema fields wrapped in a ```json ``` block,
        \n         starting with the heading `## Output values`.\n"}],"temperature":0.7,"stream":false}'
    headers:
      User-Agent:
      - Faraday v2.12.2
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 19:14:10 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '1918'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '2020'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9999'
      X-Ratelimit-Remaining-Tokens:
      - '199591'
      X-Ratelimit-Reset-Requests:
      - 8.64s
      X-Ratelimit-Reset-Tokens:
      - 122ms
      X-Request-Id:
      - req_c675beb89c49f61d663f815affab91eb
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=BL9MYewPqJKEPArpEOSfppAP7exjScsMIhVp1a9SRmg-1748632450-1.0.1.1-_QCuIMhGmhOV3uvnDcvr75tu9y_WV5ceFVIcNvz6Vn7JDALPpKRIY9m1g0Jv5fEX7HUbtkzSpjKXSP6PPMMjeIfyJh7uSIpSU2O7loj3Oy8;
        path=/; expires=Fri, 30-May-25 19:44:10 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=DHooKkIEQUed8KVVoOZSS177YIBz5N3VLcDED29pM.4-1748632450001-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 94808d7d3f4914ed-EWR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BczT65KdvPFG36qYm146IPatUeEMK",
          "object": "chat.completion",
          "created": 1748632448,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"I need to perform the addition of the numbers 42 and 58 to answer the question.\",\n  \"action\": \"add_numbers\",\n  \"action_input\": \"42, 58\",\n  \"reasoning\": \"The question asks for the sum of 42 and 58, and the available tool 'add_numbers' is specifically designed for this purpose.\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 349,
            "completion_tokens": 87,
            "total_tokens": 436,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_34a54ae93c"
        }
  recorded_at: Fri, 30 May 2025 19:14:09 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"developer","content":"      Your
        input schema fields are:\n        ```json\n         {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"question\":{\"type\":\"string\",\"description\":\"The
        original question\"},\"history\":{\"type\":\"string\",\"description\":\"Previous
        thoughts, actions, and observations\"},\"observation\":{\"type\":\"string\",\"description\":\"The
        result from the last action\"}},\"required\":[\"question\",\"history\",\"observation\"]}\n        ```\n      Your
        output schema fields are:\n        ```json\n          {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"interpretation\":{\"type\":\"string\",\"description\":\"Interpretation
        of the observation\"},\"next_step\":{\"type\":\"string\",\"description\":\"What
        to do next: \\\"continue\\\" or \\\"finish\\\"\"}},\"required\":[\"interpretation\",\"next_step\"]}\n        ````\n      All
        interactions will be structured in the following way, with the appropriate
        values filled in.\n\n      ## Input values\n        ```json\n          {input_values}\n        ```  \n      ##
        Output values\n      Respond exclusively with the output schema fields in
        the json block below.\n        ```json\n          {output_values}\n        ```\n      \n      In
        adhering to this structure, your objective is: Process the observation from
        a tool and decide what to do next.\n\n"},{"role":"user","content":"        ##
        Input Values\n        ```json\n        {\"question\":\"What is 42 plus 58?\",\"history\":\"\\nThought
        1: I need to perform the addition of the numbers 42 and 58 to answer the question.\\nAction:
        add_numbers\\nAction Input: 42, 58\\nObservation: 100.0\\n\",\"observation\":\"100.0\"}\n        ```     \n        \n        Respond
        with the corresponding output schema fields wrapped in a ```json ``` block,
        \n         starting with the heading `## Output values`.\n"}],"temperature":0.7,"stream":false}'
    headers:
      User-Agent:
      - Faraday v2.12.2
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 19:14:11 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '1012'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '1016'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9998'
      X-Ratelimit-Remaining-Tokens:
      - '199562'
      X-Ratelimit-Reset-Requests:
      - 14.509s
      X-Ratelimit-Reset-Tokens:
      - 131ms
      X-Request-Id:
      - req_a75942a413328f2af39abba64dde8920
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=PF_IViiqePtEj7fQ89cqqqYEvZRiBmdFUU_XEewRqRQ-1748632451-1.0.1.1-hiZhdNC31IHWsCxQhLr.Gdz7h4kODMFX2MmDt8iLR_YigwHAT4YhsQIo6U3PFCIWd7JO.KtFel1uj3fqXK6pFNBFXv3d.V0pesaBJoDq_Ls;
        path=/; expires=Fri, 30-May-25 19:44:11 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=i4Qxqv3ZapvRr8Loupwiw_w8UHWakuujY4tNdq0e.LQ-1748632451758-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 94808d90da8a086e-EWR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BczT8zHKO5kUXXmhfo7Hygo10WFNL",
          "object": "chat.completion",
          "created": 1748632450,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"interpretation\": \"The addition of 42 and 58 resulted in 100, which is the correct answer to the question.\",\n  \"next_step\": \"finish\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 387,
            "completion_tokens": 46,
            "total_tokens": 433,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_34a54ae93c"
        }
  recorded_at: Fri, 30 May 2025 19:14:11 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"developer","content":"      Your
        input schema fields are:\n        ```json\n         {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"question\":{\"type\":\"string\",\"description\":\"The
        question to answer\"},\"history\":{\"type\":\"string\",\"description\":\"Previous
        thoughts and actions\"},\"available_tools\":{\"type\":\"string\",\"description\":\"List
        of available tools and their descriptions\"}},\"required\":[\"question\",\"history\",\"available_tools\"]}\n        ```\n      Your
        output schema fields are:\n        ```json\n          {\"$schema\":\"http://json-schema.org/draft-06/schema#\",\"type\":\"object\",\"properties\":{\"thought\":{\"type\":\"string\"},\"action\":{\"type\":\"string\"},\"action_input\":{\"type\":\"string\"},\"reasoning\":{\"type\":\"string\"}},\"required\":[\"thought\",\"action\",\"action_input\",\"reasoning\"]}\n        ````\n      All
        interactions will be structured in the following way, with the appropriate
        values filled in.\n\n      ## Input values\n        ```json\n          {input_values}\n        ```  \n      ##
        Output values\n      Respond exclusively with the output schema fields in
        the json block below.\n        ```json\n          {output_values}\n        ```\n      \n      In
        adhering to this structure, your objective is: Generate a thought about what
        to do next to answer the question.\n\n"},{"role":"user","content":"        ##
        Input Values\n        ```json\n        {\"question\":\"What is 42 plus 58?\",\"history\":\"\\nThought
        1: I need to perform the addition of the numbers 42 and 58 to answer the question.\\nAction:
        add_numbers\\nAction Input: 42, 58\\nObservation: 100.0\\n\",\"available_tools\":\"-
        get_todays_date: Get today''s date\\n- add_numbers: Add two numbers together\"}\n        ```     \n        \n        Respond
        with the corresponding output schema fields wrapped in a ```json ``` block,
        \n         starting with the heading `## Output values`.\n"}],"temperature":0.7,"stream":false}'
    headers:
      User-Agent:
      - Faraday v2.12.2
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 30 May 2025 19:14:14 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '1997'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '2002'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9997'
      X-Ratelimit-Remaining-Tokens:
      - '199551'
      X-Ratelimit-Reset-Requests:
      - 21.412s
      X-Ratelimit-Reset-Tokens:
      - 134ms
      X-Request-Id:
      - req_cc80ee22222532cec6821b84fa8c7e44
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=Dar63fzNWxdyrnqbwyD45dFYS5uN5R0pPMUxpmy_7MQ-1748632454-1.0.1.1-5nDm0_fL1sGqKuVD3p9_dkP6AoLWSEP44GG.0wartzCOQ9sCG_6ooDbT3_Y.5wh_lUuJxtkhzaMEuJ3uW0jPEmxdnOLS2qrISWC.8VMqmq4;
        path=/; expires=Fri, 30-May-25 19:44:14 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=OwkLwRuJqQzAwevMuS0oUg9aCtSonbdhBbK5.7bDamI-1748632454482-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 94808d9a3c31cb3a-EWR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BczTAscsfeOTF1l70LBFjgx3gPqI1",
          "object": "chat.completion",
          "created": 1748632452,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"thought\": \"I have already added 42 and 58, resulting in 100. I need to confirm that my answer is correct before finalizing my response.\",\n  \"action\": \"confirm_answer\",\n  \"action_input\": \"100\",\n  \"reasoning\": \"Verifying the answer ensures accuracy before presenting it as the final response.\"\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 397,
            "completion_tokens": 81,
            "total_tokens": 478,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_34a54ae93c"
        }
  recorded_at: Fri, 30 May 2025 19:14:14 GMT
recorded_with: VCR 6.3.1
