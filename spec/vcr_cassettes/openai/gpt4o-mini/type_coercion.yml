---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"model":"gpt-4o-mini","messages":[{"role":"developer","content":"      Your
        input schema fields are:\n        ```json\n         {\"type\":\"object\",\"properties\":{\"text\":{\"type\":\"string\"}},\"required\":[\"text\"]}\n        ```\n      Your
        output schema fields are:\n        ```json\n          {\"type\":\"object\",\"properties\":{\"integer_value\":{\"type\":\"integer\"},\"float_value\":{\"type\":\"number\"}},\"required\":[\"integer_value\",\"float_value\"]}\n        ````\n      \n      For
        example, based on the schemas above, a valid interaction would be:\n      ##
        Input values\n        ```json\n          {\"text\":\"example\"}\n        ```\n      ##
        Output values\n        ```json\n          {\"integer_value\":\"example\",\"float_value\":\"example\"}\n        ```\n      \n      All
        interactions will be structured in the following way, with the appropriate
        values filled in.\n\n      ## Input values\n        ```json\n         {input_values}\n        ```  \n      ##
        Output values\n      Respond exclusively with the output schema fields in
        the json block below.\n        ```json\n          {output_values}\n        ```\n      \n      In
        adhering to this structure, your objective is: Convert text to numeric values\n\n"},{"role":"user","content":"        ##
        Input Values\n        ```json\n        {\"text\":\"The number is forty-two
        point five\"}\n        ```     \n        \n        Respond with the corresponding
        output schema fields wrapped in a ```json ``` block, \n         starting with
        the heading `## Output values`.\n"}],"temperature":0.7,"stream":false}'
    headers:
      User-Agent:
      - Faraday v2.12.2
      Authorization:
      - Bearer <OPENAI_API_KEY>
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 20 Jun 2025 23:50:03 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Expose-Headers:
      - X-Request-ID
      Openai-Organization:
      - user-ftp1nrq85er9xnlu0la8snte
      Openai-Processing-Ms:
      - '517'
      Openai-Version:
      - '2020-10-01'
      X-Envoy-Upstream-Service-Time:
      - '524'
      X-Ratelimit-Limit-Requests:
      - '10000'
      X-Ratelimit-Limit-Tokens:
      - '200000'
      X-Ratelimit-Remaining-Requests:
      - '9998'
      X-Ratelimit-Remaining-Tokens:
      - '199658'
      X-Ratelimit-Reset-Requests:
      - 16.124s
      X-Ratelimit-Reset-Tokens:
      - 102ms
      X-Request-Id:
      - req_e37dd45a57949c3cc1afbb4f6058bf5b
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=xYFNV9jjzgZw3HfKG6thIqlz.DGRA05.IgB.NgHSLu4-1750463403-1.0.1.1-Dt12TH7H5ioomDujElMWw_M7Ptcy_zcsKA4kWLn7f1VfrMECj1axGqDXgebp_rc_PtgLgK1ugPhzY3V7NiuEPKHvXRBjuZ_RvmTypnt3UEQ;
        path=/; expires=Sat, 21-Jun-25 00:20:03 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=62Iu1fqKXQFMlHhBlTry2TEu5YPc_ojZwHb3JmXIIRw-1750463403149-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      X-Content-Type-Options:
      - nosniff
      Server:
      - cloudflare
      Cf-Ray:
      - 952f2a86ed941e76-EZE
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-BkfmcR88Tdbh7cD0lIgl9GNBzyiej",
          "object": "chat.completion",
          "created": 1750463402,
          "model": "gpt-4o-mini-2024-07-18",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "## Output values\n```json\n{\n  \"integer_value\": 42,\n  \"float_value\": 42.5\n}\n```",
                "refusal": null,
                "annotations": []
              },
              "logprobs": null,
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 282,
            "completion_tokens": 28,
            "total_tokens": 310,
            "prompt_tokens_details": {
              "cached_tokens": 0,
              "audio_tokens": 0
            },
            "completion_tokens_details": {
              "reasoning_tokens": 0,
              "audio_tokens": 0,
              "accepted_prediction_tokens": 0,
              "rejected_prediction_tokens": 0
            }
          },
          "service_tier": "default",
          "system_fingerprint": "fp_34a54ae93c"
        }
  recorded_at: Fri, 20 Jun 2025 23:50:03 GMT
recorded_with: VCR 6.3.1
