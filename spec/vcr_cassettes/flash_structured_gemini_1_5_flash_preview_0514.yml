---
http_interactions:
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-preview-0514:generateContent?key=<GEMINI_API_KEY>
    body:
      encoding: UTF-8
      string: '{"contents":[{"role":"user","parts":[{"text":"Your input schema fields
        are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"description\":
        \"Text to analyze\"\n    }\n  },\n  \"required\": [\n    \"text\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"sentiment\": {\n      \"type\": \"string\",\n      \"enum\":
        [\n        \"positive\",\n        \"negative\",\n        \"neutral\"\n      ],\n      \"description\":
        \"Detected sentiment\"\n    },\n    \"confidence\": {\n      \"type\": \"number\",\n      \"description\":
        \"Confidence score\"\n    },\n    \"summary\": {\n      \"type\": \"string\",\n      \"description\":
        \"Brief summary\"\n    }\n  },\n  \"required\": [\n    \"sentiment\",\n    \"confidence\",\n    \"summary\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Simple test signature for Flash model validation"}]},{"role":"user","parts":[{"text":"##
        Input Values\n```json\n{\n  \"text\": \"This is an amazing product that exceeds
        expectations!\"\n}\n```\n\nRespond with the corresponding output schema fields
        wrapped in a ```json ``` block,\nstarting with the heading `## Output values`."}]}],"generation_config":{"response_mime_type":"application/json","response_json_schema":{"type":"object","properties":{"sentiment":{"type":"string","enum":["positive","negative","neutral"]},"confidence":{"type":"number"},"summary":{"type":"string"}},"required":["sentiment","confidence","summary"]}}}'
    headers:
      User-Agent:
      - Faraday v2.13.4
      Content-Type:
      - application/json
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Vary:
      - Origin
      - Referer
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      Date:
      - Mon, 22 Sep 2025 16:35:10 GMT
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '220'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=58
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "error": {
            "code": 404,
            "message": "models/gemini-1.5-flash-preview-0514 is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.",
            "status": "NOT_FOUND"
          }
        }
  recorded_at: Mon, 22 Sep 2025 16:35:09 GMT
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-preview-0514:generateContent?key=<GEMINI_API_KEY>
    body:
      encoding: UTF-8
      string: '{"contents":[{"role":"user","parts":[{"text":"Your input schema fields
        are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"description\":
        \"Text to analyze\"\n    }\n  },\n  \"required\": [\n    \"text\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"sentiment\": {\n      \"type\": \"string\",\n      \"enum\":
        [\n        \"positive\",\n        \"negative\",\n        \"neutral\"\n      ],\n      \"description\":
        \"Detected sentiment\"\n    },\n    \"confidence\": {\n      \"type\": \"number\",\n      \"description\":
        \"Confidence score\"\n    },\n    \"summary\": {\n      \"type\": \"string\",\n      \"description\":
        \"Brief summary\"\n    }\n  },\n  \"required\": [\n    \"sentiment\",\n    \"confidence\",\n    \"summary\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Simple test signature for Flash model validation"}]},{"role":"user","parts":[{"text":"##
        Input Values\n```json\n{\n  \"text\": \"This is an amazing product that exceeds
        expectations!\"\n}\n```\n\nRespond with the corresponding output schema fields
        wrapped in a ```json ``` block,\nstarting with the heading `## Output values`."}]}],"generation_config":{"response_mime_type":"application/json","response_json_schema":{"type":"object","properties":{"sentiment":{"type":"string","enum":["positive","negative","neutral"]},"confidence":{"type":"number"},"summary":{"type":"string"}},"required":["sentiment","confidence","summary"]}}}'
    headers:
      User-Agent:
      - Faraday v2.13.4
      Content-Type:
      - application/json
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Vary:
      - Origin
      - Referer
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      Date:
      - Mon, 22 Sep 2025 16:35:11 GMT
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '220'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=56
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "error": {
            "code": 404,
            "message": "models/gemini-1.5-flash-preview-0514 is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.",
            "status": "NOT_FOUND"
          }
        }
  recorded_at: Mon, 22 Sep 2025 16:35:10 GMT
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-preview-0514:generateContent?key=<GEMINI_API_KEY>
    body:
      encoding: UTF-8
      string: '{"contents":[{"role":"user","parts":[{"text":"Your input schema fields
        are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"description\":
        \"Text to analyze\"\n    }\n  },\n  \"required\": [\n    \"text\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"sentiment\": {\n      \"type\": \"string\",\n      \"enum\":
        [\n        \"positive\",\n        \"negative\",\n        \"neutral\"\n      ],\n      \"description\":
        \"Detected sentiment\"\n    },\n    \"confidence\": {\n      \"type\": \"number\",\n      \"description\":
        \"Confidence score\"\n    },\n    \"summary\": {\n      \"type\": \"string\",\n      \"description\":
        \"Brief summary\"\n    }\n  },\n  \"required\": [\n    \"sentiment\",\n    \"confidence\",\n    \"summary\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Simple test signature for Flash model validation"}]},{"role":"user","parts":[{"text":"##
        Input Values\n```json\n{\n  \"text\": \"This is an amazing product that exceeds
        expectations!\"\n}\n```\n\nRespond with the corresponding output schema fields
        wrapped in a ```json ``` block,\nstarting with the heading `## Output values`.\n\nIMPORTANT:
        You must respond with valid JSON that matches this structure:\n```json\n{\n  \"sentiment\":
        \"Detected sentiment\",\n  \"confidence\": 3.14,\n  \"summary\": \"Brief summary\"\n}\n```\n\nRequired
        fields: sentiment, confidence, summary\n\nEnsure your response:\n1. Is valid
        JSON (properly quoted strings, no trailing commas)\n2. Includes all required
        fields\n3. Uses the correct data types for each field\n4. Is wrapped in ```json```
        markdown code blocks\n"}]}]}'
    headers:
      User-Agent:
      - Faraday v2.13.4
      Content-Type:
      - application/json
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Vary:
      - Origin
      - Referer
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      Date:
      - Mon, 22 Sep 2025 16:35:11 GMT
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '220'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=53
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "error": {
            "code": 404,
            "message": "models/gemini-1.5-flash-preview-0514 is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.",
            "status": "NOT_FOUND"
          }
        }
  recorded_at: Mon, 22 Sep 2025 16:35:10 GMT
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-preview-0514:generateContent?key=<GEMINI_API_KEY>
    body:
      encoding: UTF-8
      string: '{"contents":[{"role":"user","parts":[{"text":"Your input schema fields
        are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"description\":
        \"Text to analyze\"\n    }\n  },\n  \"required\": [\n    \"text\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"sentiment\": {\n      \"type\": \"string\",\n      \"enum\":
        [\n        \"positive\",\n        \"negative\",\n        \"neutral\"\n      ],\n      \"description\":
        \"Detected sentiment\"\n    },\n    \"confidence\": {\n      \"type\": \"number\",\n      \"description\":
        \"Confidence score\"\n    },\n    \"summary\": {\n      \"type\": \"string\",\n      \"description\":
        \"Brief summary\"\n    }\n  },\n  \"required\": [\n    \"sentiment\",\n    \"confidence\",\n    \"summary\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Simple test signature for Flash model validation"}]},{"role":"user","parts":[{"text":"##
        Input Values\n```json\n{\n  \"text\": \"This is an amazing product that exceeds
        expectations!\"\n}\n```\n\nRespond with the corresponding output schema fields
        wrapped in a ```json ``` block,\nstarting with the heading `## Output values`.\n\nIMPORTANT:
        You must respond with valid JSON that matches this structure:\n```json\n{\n  \"sentiment\":
        \"Detected sentiment\",\n  \"confidence\": 3.14,\n  \"summary\": \"Brief summary\"\n}\n```\n\nRequired
        fields: sentiment, confidence, summary\n\nEnsure your response:\n1. Is valid
        JSON (properly quoted strings, no trailing commas)\n2. Includes all required
        fields\n3. Uses the correct data types for each field\n4. Is wrapped in ```json```
        markdown code blocks\n"}]}]}'
    headers:
      User-Agent:
      - Faraday v2.13.4
      Content-Type:
      - application/json
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Vary:
      - Origin
      - Referer
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      Date:
      - Mon, 22 Sep 2025 16:35:11 GMT
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '220'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=54
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "error": {
            "code": 404,
            "message": "models/gemini-1.5-flash-preview-0514 is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.",
            "status": "NOT_FOUND"
          }
        }
  recorded_at: Mon, 22 Sep 2025 16:35:11 GMT
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-preview-0514:generateContent?key=<GEMINI_API_KEY>
    body:
      encoding: UTF-8
      string: '{"contents":[{"role":"user","parts":[{"text":"Your input schema fields
        are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"description\":
        \"Text to analyze\"\n    }\n  },\n  \"required\": [\n    \"text\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"sentiment\": {\n      \"type\": \"string\",\n      \"enum\":
        [\n        \"positive\",\n        \"negative\",\n        \"neutral\"\n      ],\n      \"description\":
        \"Detected sentiment\"\n    },\n    \"confidence\": {\n      \"type\": \"number\",\n      \"description\":
        \"Confidence score\"\n    },\n    \"summary\": {\n      \"type\": \"string\",\n      \"description\":
        \"Brief summary\"\n    }\n  },\n  \"required\": [\n    \"sentiment\",\n    \"confidence\",\n    \"summary\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Simple test signature for Flash model validation"}]},{"role":"user","parts":[{"text":"##
        Input Values\n```json\n{\n  \"text\": \"This is an amazing product that exceeds
        expectations!\"\n}\n```\n\nRespond with the corresponding output schema fields
        wrapped in a ```json ``` block,\nstarting with the heading `## Output values`.\n\nIMPORTANT:
        You must respond with valid JSON that matches this structure:\n```json\n{\n  \"sentiment\":
        \"Detected sentiment\",\n  \"confidence\": 3.14,\n  \"summary\": \"Brief summary\"\n}\n```\n\nRequired
        fields: sentiment, confidence, summary\n\nEnsure your response:\n1. Is valid
        JSON (properly quoted strings, no trailing commas)\n2. Includes all required
        fields\n3. Uses the correct data types for each field\n4. Is wrapped in ```json```
        markdown code blocks\n"}]}]}'
    headers:
      User-Agent:
      - Faraday v2.13.4
      Content-Type:
      - application/json
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Vary:
      - Origin
      - Referer
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      Date:
      - Mon, 22 Sep 2025 16:35:13 GMT
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '220'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=43
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "error": {
            "code": 404,
            "message": "models/gemini-1.5-flash-preview-0514 is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.",
            "status": "NOT_FOUND"
          }
        }
  recorded_at: Mon, 22 Sep 2025 16:35:13 GMT
- request:
    method: post
    uri: https://collector.newrelic.com/agent_listener/invoke_raw_method?license_key=265ff33536964dfa3ff96eaa58fba95cFFFFNRAL&marshal_format=json&method=log_event_data&protocol_version=17&run_id=BTxgpjfkZD-nADvrtB84K3po0XssAAEBAAAnIQEAAPxNAgQfPOcaAwAGOS4yMS4wAAtzaW1iYS5sb2NhbAAHRFNQeS5yYg
    body:
      encoding: UTF-8
      string: '[{"common":{"attributes":{"entity.name":"DSPy.rb","hostname":"simba.local","entity.guid":"MzkyNjk2NHxBUE18QVBQTElDQVRJT058NTI0MDg1MDE4"}},"logs":[{"level":"INFO","timestamp":1758558910720.727,"message":"Max
        retries reached for gemini_structured_output, trying next strategy\n"},{"level":"WARN","timestamp":1758558910949.7651,"message":"Retrying
        enhanced_prompting after error (attempt 1/3): Gemini adapter error: the server
        responded with status 404 for POST https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-preview-0514:generateContent?key=<GEMINI_API_KEY>\n"},{"level":"WARN","timestamp":1758558911695.28,"message":"Retrying
        enhanced_prompting after error (attempt 2/3): Gemini adapter error: the server
        responded with status 404 for POST https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-preview-0514:generateContent?key=<GEMINI_API_KEY>\n"}]}]'
    headers:
      Content-Encoding:
      - identity
      Host:
      - collector.newrelic.com
      Nr-Utilizationmetadata:
      - AQICFgALc2ltYmEubG9jYWwXAAtzaW1iYS5sb2NhbA
      Nr-Utilizationextra:
      - AQARAAUAAAAIAABgAA
      Nr-Session:
      - BTxgpjfkZD-nADvrtB84K3po0XssAAEBAAAnIQEAAPxNAgQfPOcaAwAGOS4yMS4wAAtzaW1iYS5sb2NhbAAHRFNQeS5yYg
      Nr-Agenttags:
      - AX2uHIkGAAlhY2NvdW50SWQABzM5MjY5NjQAEHRydXN0ZWRBY2NvdW50SWQABzM5MjY5NjQAB2FjY291bnQAD0FjY291bnQgMzkyNjk2NA
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - NewRelic-RubyAgent/9.21.0 (ruby 3.3.6 arm64-darwin23) zlib/1.2.12
      Content-Type:
      - application/octet-stream
  response:
    status:
      code: 202
      message: ''
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      Content-Type:
      - application/json; charset=UTF-8
      X-Envoy-Upstream-Service-Time:
      - '0'
      Date:
      - Mon, 22 Sep 2025 16:35:13 GMT
      Server:
      - envoy
      Nr-Rate-Limited:
      - allowed
      X-Served-By:
      - cache-bur-kbur8200105-BUR
    body:
      encoding: UTF-8
      string: ''
  recorded_at: Mon, 22 Sep 2025 16:35:13 GMT
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-preview-0514:generateContent?key=<GEMINI_API_KEY>
    body:
      encoding: UTF-8
      string: '{"contents":[{"role":"user","parts":[{"text":"Your input schema fields
        are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"description\":
        \"Text to analyze\"\n    }\n  },\n  \"required\": [\n    \"text\"\n  ]\n}\n```\nYour
        output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"sentiment\": {\n      \"type\": \"string\",\n      \"enum\":
        [\n        \"positive\",\n        \"negative\",\n        \"neutral\"\n      ],\n      \"description\":
        \"Detected sentiment\"\n    },\n    \"confidence\": {\n      \"type\": \"number\",\n      \"description\":
        \"Confidence score\"\n    },\n    \"summary\": {\n      \"type\": \"string\",\n      \"description\":
        \"Brief summary\"\n    }\n  },\n  \"required\": [\n    \"sentiment\",\n    \"confidence\",\n    \"summary\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Simple test signature for Flash model validation"}]},{"role":"user","parts":[{"text":"##
        Input Values\n```json\n{\n  \"text\": \"This is an amazing product that exceeds
        expectations!\"\n}\n```\n\nRespond with the corresponding output schema fields
        wrapped in a ```json ``` block,\nstarting with the heading `## Output values`.\n\nIMPORTANT:
        You must respond with valid JSON that matches this structure:\n```json\n{\n  \"sentiment\":
        \"Detected sentiment\",\n  \"confidence\": 3.14,\n  \"summary\": \"Brief summary\"\n}\n```\n\nRequired
        fields: sentiment, confidence, summary\n\nEnsure your response:\n1. Is valid
        JSON (properly quoted strings, no trailing commas)\n2. Includes all required
        fields\n3. Uses the correct data types for each field\n4. Is wrapped in ```json```
        markdown code blocks\n"}]}]}'
    headers:
      User-Agent:
      - Faraday v2.13.4
      Content-Type:
      - application/json
      Expect:
      - ''
  response:
    status:
      code: 404
      message: ''
    headers:
      Vary:
      - Origin
      - Referer
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      Date:
      - Mon, 22 Sep 2025 16:35:15 GMT
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '220'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=48
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "error": {
            "code": 404,
            "message": "models/gemini-1.5-flash-preview-0514 is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.",
            "status": "NOT_FOUND"
          }
        }
  recorded_at: Mon, 22 Sep 2025 16:35:15 GMT
recorded_with: VCR 6.3.1
