---
http_interactions:
- request:
    method: post
    uri: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=<GEMINI_API_KEY>
    body:
      encoding: UTF-8
      string: '{"contents":[{"role":"user","parts":[{"text":"Your input schema fields
        are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\":
        \"object\",\n  \"properties\": {\n    \"query\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\":
        [\n    \"query\"\n  ]\n}\n```\nYour output schema fields are:\n```json\n{\n  \"$schema\":
        \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\":
        {\n    \"result\": {\n      \"type\": \"string\"\n    },\n    \"deep_data\":
        {\n      \"type\": \"object\",\n      \"propertyNames\": {\n        \"type\":
        \"string\"\n      },\n      \"additionalProperties\": {\n        \"type\":
        \"object\",\n        \"propertyNames\": {\n          \"type\": \"string\"\n        },\n        \"additionalProperties\":
        {\n          \"type\": \"object\",\n          \"propertyNames\": {\n            \"type\":
        \"string\"\n          },\n          \"additionalProperties\": {\n            \"type\":
        \"object\",\n            \"propertyNames\": {\n              \"type\": \"string\"\n            },\n            \"additionalProperties\":
        {\n              \"type\": \"object\",\n              \"propertyNames\": {\n                \"type\":
        \"string\"\n              },\n              \"additionalProperties\": {\n                \"type\":
        \"string\"\n              },\n              \"description\": \"A mapping where
        keys are strings and values are strings\"\n            },\n            \"description\":
        \"A mapping where keys are strings and values are A mapping where keys are
        strings and values are stringss\"\n          },\n          \"description\":
        \"A mapping where keys are strings and values are A mapping where keys are
        strings and values are A mapping where keys are strings and values are stringsss\"\n        },\n        \"description\":
        \"A mapping where keys are strings and values are A mapping where keys are
        strings and values are A mapping where keys are strings and values are A mapping
        where keys are strings and values are stringssss\"\n      },\n      \"description\":
        \"A mapping where keys are strings and values are A mapping where keys are
        strings and values are A mapping where keys are strings and values are A mapping
        where keys are strings and values are A mapping where keys are strings and
        values are stringsssss\"\n    }\n  },\n  \"required\": [\n    \"result\",\n    \"deep_data\"\n  ]\n}\n```\n\nAll
        interactions will be structured in the following way, with the appropriate
        values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output
        values\nRespond exclusively with the output schema fields in the json block
        below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your
        objective is: Potentially problematic signature"}]},{"role":"user","parts":[{"text":"##
        Input Values\n```json\n{\n  \"query\": \"Test deep nesting\"\n}\n```\n\nRespond
        with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting
        with the heading `## Output values`."}]}],"generation_config":{"response_mime_type":"application/json","response_json_schema":{"type":"object","properties":{"result":{"type":"string"},"deep_data":{"type":"object"}},"required":["result","deep_data"]}}}'
    headers:
      User-Agent:
      - Faraday v2.13.4
      Content-Type:
      - application/json
      Expect:
      - ''
  response:
    status:
      code: 200
      message: ''
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Content-Encoding:
      - gzip
      Date:
      - Tue, 23 Sep 2025 16:57:58 GMT
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '374'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Server-Timing:
      - gfet4t7; dur=663
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "candidates": [
            {
              "content": {
                "parts": [
                  {
                    "text": "{\"result\": \"Success\", \"deep_data\": {\"level1\": {\"level2\":  1, \"level3\": 2}, \"level4\": {\"level5\": 3, \"level6\": 4}}}"
                  }
                ],
                "role": "model"
              },
              "finishReason": "STOP",
              "avgLogprobs": -0.10721206665039062
            }
          ],
          "usageMetadata": {
            "promptTokenCount": 681,
            "candidatesTokenCount": 47,
            "totalTokenCount": 728,
            "promptTokensDetails": [
              {
                "modality": "TEXT",
                "tokenCount": 681
              }
            ],
            "candidatesTokensDetails": [
              {
                "modality": "TEXT",
                "tokenCount": 47
              }
            ]
          },
          "modelVersion": "gemini-1.5-flash",
          "responseId": "ltHSaNueD8TqnsEP6JadkAY"
        }
  recorded_at: Tue, 23 Sep 2025 16:57:58 GMT
recorded_with: VCR 6.3.1
