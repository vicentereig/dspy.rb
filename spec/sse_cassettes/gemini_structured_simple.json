{
  "interactions": [
    {
      "request": {
        "method": "post",
        "uri": "https://generativelanguage.googleapis.com/v1/models/gemini-1.5-flash:streamGenerateContent?alt=sse&key=<GEMINI_API_KEY>",
        "body": {
          "contents": [
            {
              "role": "user",
              "parts": [
                {
                  "text": "Your input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"description\": \"Text to analyze\"\n    }\n  },\n  \"required\": [\n    \"text\"\n  ]\n}\n```\nYour output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"sentiment\": {\n      \"type\": \"string\",\n      \"enum\": [\n        \"positive\",\n        \"negative\",\n        \"neutral\"\n      ],\n      \"description\": \"Detected sentiment\"\n    },\n    \"confidence\": {\n      \"type\": \"number\",\n      \"description\": \"Confidence score between 0 and 1\"\n    },\n    \"reasoning\": {\n      \"type\": \"string\",\n      \"description\": \"Explanation for the sentiment\"\n    }\n  },\n  \"required\": [\n    \"sentiment\",\n    \"confidence\",\n    \"reasoning\"\n  ]\n}\n```\n\nAll interactions will be structured in the following way, with the appropriate values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output values\nRespond exclusively with the output schema fields in the json block below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your objective is: Analyze the sentiment of a text"
                }
              ]
            },
            {
              "role": "user",
              "parts": [
                {
                  "text": "## Input Values\n```json\n{\n  \"text\": \"I absolutely love this product! It exceeded all my expectations.\"\n}\n```\n\nRespond with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid JSON that matches this structure:\n```json\n{\n  \"sentiment\": \"Detected sentiment\",\n  \"confidence\": 3.14,\n  \"reasoning\": \"Explanation for the sentiment\"\n}\n```\n\nRequired fields: sentiment, confidence, reasoning\n\nEnsure your response:\n1. Is valid JSON (properly quoted strings, no trailing commas)\n2. Includes all required fields\n3. Uses the correct data types for each field\n4. Is wrapped in ```json``` markdown code blocks\n"
                }
              ]
            }
          ]
        },
        "headers": {
          "User-Agent": "Faraday v2.13.4",
          "Content-Type": "application/json",
          "Expect": ""
        }
      },
      "response": {
        "chunks": [
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "##"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 538,
              "totalTokenCount": 538,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 538
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "foLFaJ-9Hf6q7dcPrtLy8AY"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": " Output values\n```json\n{\n  \"sentiment\": \"positive\",\n"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 538,
              "totalTokenCount": 538,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 538
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "foLFaJ-9Hf6q7dcPrtLy8AY"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "  \"confidence\": 0.95,\n  \"reasoning\":"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 538,
              "totalTokenCount": 538,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 538
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "foLFaJ-9Hf6q7dcPrtLy8AY"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": " \"The phrases \\\"absolutely love\\\" and \\\"exceeded all my expectations\\\" strongly indicate positive sentiment.\"\n}\n```\n"
                    }
                  ],
                  "role": "model"
                },
                "finishReason": "STOP"
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 536,
              "candidatesTokenCount": 58,
              "totalTokenCount": 594,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 536
                }
              ],
              "candidatesTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 58
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "foLFaJ-9Hf6q7dcPrtLy8AY"
          }
        ],
        "recorded_at": "2025-09-13T16:41:02+02:00"
      }
    }
  ],
  "recorded_with": "SSEVCR 1.0.0"
}