{
  "interactions": [
    {
      "request": {
        "method": "post",
        "uri": "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:streamGenerateContent?alt=sse&key=<GEMINI_API_KEY>",
        "body": {
          "contents": [
            {
              "role": "user",
              "parts": [
                {
                  "text": "Your input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"query\": {\n      \"type\": \"string\",\n      \"description\": \"User query\"\n    }\n  },\n  \"required\": [\n    \"query\"\n  ]\n}\n```\nYour output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"result\": {\n      \"type\": \"string\",\n      \"description\": \"Main result (required)\"\n    },\n    \"confidence\": {\n      \"type\": [\n        \"number\",\n        \"null\"\n      ],\n      \"description\": \"Optional confidence score\"\n    },\n    \"metadata\": {\n      \"type\": [\n        \"string\",\n        \"null\"\n      ],\n      \"description\": \"Optional metadata string\"\n    },\n    \"category\": {\n      \"type\": [\n        \"string\",\n        \"null\"\n      ],\n      \"description\": \"Optional category\"\n    },\n    \"error_code\": {\n      \"type\": [\n        \"integer\",\n        \"null\"\n      ],\n      \"description\": \"Optional error code\"\n    }\n  },\n  \"required\": [\n    \"result\",\n    \"confidence\",\n    \"metadata\",\n    \"category\",\n    \"error_code\"\n  ]\n}\n```\n\nAll interactions will be structured in the following way, with the appropriate values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output values\nRespond exclusively with the output schema fields in the json block below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your objective is: Test signature with optional/nilable fields"
                }
              ]
            },
            {
              "role": "user",
              "parts": [
                {
                  "text": "## Input Values\n```json\n{\n  \"query\": \"Analyze this simple request\"\n}\n```\n\nRespond with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting with the heading `## Output values`."
                }
              ]
            }
          ],
          "generation_config": {
            "response_mime_type": "application/json",
            "response_json_schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string"
                },
                "confidence": {
                  "type": "string"
                },
                "metadata": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "error_code": {
                  "type": "string"
                }
              },
              "required": [
                "result",
                "confidence",
                "metadata",
                "category",
                "error_code"
              ]
            }
          }
        },
        "headers": {
          "User-Agent": "Faraday v2.13.4",
          "Content-Type": "application/json",
          "Expect": ""
        }
      },
      "response": {
        "chunks": [
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "{\""
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 498,
              "totalTokenCount": 498,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 498
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "HnzRaMjvLq6bm9IPuICWmAw"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "result\": \"Analysis of the request is complete.\",\"confidence\":  \"0"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 498,
              "totalTokenCount": 498,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 498
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "HnzRaMjvLq6bm9IPuICWmAw"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": ".95\",\"metadata\": \"This is metadata about the analysis.\",\"category"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 498,
              "totalTokenCount": 498,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 498
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "HnzRaMjvLq6bm9IPuICWmAw"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "\": \"Analysis\",\"error_code\": \n\"0\"}"
                    }
                  ],
                  "role": "model"
                },
                "finishReason": "STOP"
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 496,
              "candidatesTokenCount": 46,
              "totalTokenCount": 542,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 496
                }
              ],
              "candidatesTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 46
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "HnzRaMjvLq6bm9IPuICWmAw"
          }
        ],
        "recorded_at": "2025-09-22T18:41:03+02:00"
      }
    }
  ],
  "recorded_with": "SSEVCR 1.0.0"
}