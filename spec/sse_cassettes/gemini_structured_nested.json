{
  "interactions": [
    {
      "request": {
        "method": "post",
        "uri": "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:streamGenerateContent?alt=sse&key=<GEMINI_API_KEY>",
        "body": {
          "contents": [
            {
              "role": "user",
              "parts": [
                {
                  "text": "Your input schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"topic\": {\n      \"type\": \"string\",\n      \"description\": \"Topic to structure\"\n    }\n  },\n  \"required\": [\n    \"topic\"\n  ]\n}\n```\nYour output schema fields are:\n```json\n{\n  \"$schema\": \"http://json-schema.org/draft-06/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"structure\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_type\": {\n          \"type\": \"string\",\n          \"const\": \"GeminiLevel1\"\n        },\n        \"section\": {\n          \"type\": \"string\"\n        },\n        \"groups\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"_type\": {\n                \"type\": \"string\",\n                \"const\": \"GeminiLevel2\"\n              },\n              \"category\": {\n                \"type\": \"string\"\n              },\n              \"subcategories\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"_type\": {\n                      \"type\": \"string\",\n                      \"const\": \"GeminiLevel3\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"items\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                          \"_type\": {\n                            \"type\": \"string\",\n                            \"const\": \"GeminiLevel4\"\n                          },\n                          \"value\": {\n                            \"type\": \"string\"\n                          },\n                          \"tags\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                              \"type\": \"string\"\n                            }\n                          }\n                        },\n                        \"required\": [\n                          \"_type\",\n                          \"value\",\n                          \"tags\"\n                        ],\n                        \"description\": \"GeminiLevel4 struct\"\n                      }\n                    },\n                    \"metadata\": {\n                      \"type\": \"object\",\n                      \"propertyNames\": {\n                        \"type\": \"string\"\n                      },\n                      \"additionalProperties\": {\n                        \"type\": \"string\"\n                      },\n                      \"description\": \"A mapping where keys are strings and values are strings\"\n                    }\n                  },\n                  \"required\": [\n                    \"_type\",\n                    \"name\",\n                    \"items\",\n                    \"metadata\"\n                  ],\n                  \"description\": \"GeminiLevel3 struct\"\n                }\n              },\n              \"count\": {\n                \"type\": \"integer\"\n              }\n            },\n            \"required\": [\n              \"_type\",\n              \"category\",\n              \"subcategories\",\n              \"count\"\n            ],\n            \"description\": \"GeminiLevel2 struct\"\n          }\n        },\n        \"total\": {\n          \"type\": \"integer\"\n        },\n        \"summary\": {\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"_type\",\n        \"section\",\n        \"groups\",\n        \"total\",\n        \"summary\"\n      ],\n      \"description\": \"Deeply nested hierarchical structure\"\n    },\n    \"depth_level\": {\n      \"type\": \"integer\",\n      \"description\": \"Maximum depth reached\"\n    },\n    \"complexity_score\": {\n      \"type\": \"number\",\n      \"description\": \"Complexity rating\"\n    }\n  },\n  \"required\": [\n    \"structure\",\n    \"depth_level\",\n    \"complexity_score\"\n  ]\n}\n```\n\nAll interactions will be structured in the following way, with the appropriate values filled in.\n## Input values\n```json\n{input_values}\n```\n## Output values\nRespond exclusively with the output schema fields in the json block below.\n```json\n{output_values}\n```\n\nIn adhering to this structure, your objective is: Test signature with deeply nested structures"
                }
              ]
            },
            {
              "role": "user",
              "parts": [
                {
                  "text": "## Input Values\n```json\n{\n  \"topic\": \"Programming languages categorization\"\n}\n```\n\nRespond with the corresponding output schema fields wrapped in a ```json ``` block,\nstarting with the heading `## Output values`.\n\nIMPORTANT: You must respond with valid JSON that matches this structure:\n```json\n{\n  \"structure\": {\n    \"_type\": \"example string\",\n    \"section\": \"example string\",\n    \"groups\": [\n      {\n        \"_type\": \"example string\",\n        \"category\": \"example string\",\n        \"subcategories\": [\n          {\n            \"_type\": \"example string\",\n            \"name\": \"example string\",\n            \"items\": [\n              {\n                \"_type\": \"example string\",\n                \"value\": \"example string\",\n                \"tags\": [\n                  \"example string\"\n                ]\n              }\n            ],\n            \"metadata\": {\n              \"nested\": \"object\"\n            }\n          }\n        ],\n        \"count\": 42\n      }\n    ],\n    \"total\": 42,\n    \"summary\": \"example string\"\n  },\n  \"depth_level\": 42,\n  \"complexity_score\": 3.14\n}\n```\n\nRequired fields: structure, depth_level, complexity_score\n\nEnsure your response:\n1. Is valid JSON (properly quoted strings, no trailing commas)\n2. Includes all required fields\n3. Uses the correct data types for each field\n4. Is wrapped in ```json``` markdown code blocks\n"
                }
              ]
            }
          ]
        },
        "headers": {
          "User-Agent": "Faraday v2.13.4",
          "Content-Type": "application/json",
          "Expect": ""
        }
      },
      "response": {
        "chunks": [
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "```"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "json\n{\n  \"structure\": {\n    \"_type\": \"Gemini"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "Level1\",\n    \"section\": \"Programming Languages\",\n    \"groups"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "\": [\n      {\n        \"_type\": \"GeminiLevel2\",\n        \"category\": \"Paradigm\",\n        \"subcategories\": [\n"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "          {\n            \"_type\": \"GeminiLevel3\",\n            \"name\": \"Object-Oriented\",\n            \"items\": [\n              {\n"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "                \"_type\": \"GeminiLevel4\",\n                \"value\": \"Java\",\n                \"tags\": [\n                  \"static\",\n                  \"compiled\"\n                ]\n              },\n              {\n                \"_type\": \""
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "GeminiLevel4\",\n                \"value\": \"Python\",\n                \"tags\": [\n                  \"dynamic\",\n                  \"interpreted\"\n                ]\n              }\n            ],\n            \"metadata\": {\n              \"popularity\":"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": " \"high\"\n            }\n          },\n          {\n            \"_type\": \"GeminiLevel3\",\n            \"name\": \"Functional\",\n            \"items\": [\n              {\n                \"_type\": \"GeminiLevel4\",\n                \"value\": \"Haskell\",\n                \"tags\": ["
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "\n                  \"pure\",\n                  \"lazy\"\n                ]\n              }\n            ],\n            \"metadata\": {\n              \"popularity\": \"medium\"\n            }\n          }\n        ],\n        \"count\": 3\n      },\n      {\n        \"_type\": \"GeminiLevel2"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "\",\n        \"category\": \"Typing\",\n        \"subcategories\": [\n          {\n            \"_type\": \"GeminiLevel3\",\n            \"name\": \"Static\",\n            \"items\": [\n              {\n                \"_type\": \"GeminiLevel4\",\n                \"value\": \"C++"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "\",\n                \"tags\": [\n                  \"compiled\",\n                  \"performance\"\n                ]\n              }\n            ],\n            \"metadata\": {\n              \"popularity\": \"high\"\n            }\n          },\n          {\n            \"_type\": \"GeminiLevel3\",\n            \"name\":"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": " \"Dynamic\",\n            \"items\": [\n              {\n                \"_type\": \"GeminiLevel4\",\n                \"value\": \"Ruby\",\n                \"tags\": [\n                  \"interpreted\",\n                  \"flexible\"\n                ]\n              }\n            ],\n            \"metadata\": {\n              \""
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "popularity\": \"medium\"\n            }\n          }\n        ],\n        \"count\": 2\n      }\n    ],\n    \"total\": 5,\n    \"summary\": \"Categorization of programming languages by paradigm and typing\"\n  },\n  \"depth_level\": 4,"
                    }
                  ],
                  "role": "model"
                }
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1308,
              "totalTokenCount": 1308,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1308
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          },
          {
            "candidates": [
              {
                "content": {
                  "parts": [
                    {
                      "text": "\n  \"complexity_score\": 2.5\n}\n```\n"
                    }
                  ],
                  "role": "model"
                },
                "finishReason": "STOP"
              }
            ],
            "usageMetadata": {
              "promptTokenCount": 1306,
              "candidatesTokenCount": 593,
              "totalTokenCount": 1899,
              "promptTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 1306
                }
              ],
              "candidatesTokensDetails": [
                {
                  "modality": "TEXT",
                  "tokenCount": 593
                }
              ]
            },
            "modelVersion": "gemini-1.5-flash",
            "responseId": "u3vRaKm3EPeThMIP2YnQmAE"
          }
        ],
        "recorded_at": "2025-09-22T18:39:26+02:00"
      }
    }
  ],
  "recorded_with": "SSEVCR 1.0.0"
}